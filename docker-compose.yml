services:
  postgres:
    image: postgres:15-alpine
    container_name: obrasgov_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-obrasgov_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-obrasgov_pass}
      POSTGRES_DB: ${POSTGRES_DB:-obrasgov_db}
    ports:
      - "${POSTGRES_PORT:-5455}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-obrasgov_user} -d ${POSTGRES_DB:-obrasgov_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - obrasgov_network

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: obrasgov_api
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 40s
    networks:
      - obrasgov_network
    restart: unless-stopped

  streamlit:
    build:
      context: .
      dockerfile: streamlit/Dockerfile
    container_name: obrasgov_streamlit
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - obrasgov_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  obrasgov_network:
    driver: bridge
